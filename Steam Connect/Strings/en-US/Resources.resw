<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AnyGame" xml:space="preserve">
    <value>Any Game</value>
  </data>
  <data name="AppClosingMessage1" xml:space="preserve">
    <value>This application is open source and you can check it on Github, and if you have an account there I would appreciate a star</value>
  </data>
  <data name="AppClosingMessage2" xml:space="preserve">
    <value>You can rate the app in the Microsoft Store, I'm not going to tell you how you should rate me but I hope you keep in mind that I'm the only developer with the app</value>
  </data>
  <data name="AppClosingMessage3" xml:space="preserve">
    <value>You can check the latest updates that I have released for this application on my website, do not expect kilometric updates because only two hands work on this application</value>
  </data>
  <data name="AppClosingNo.Text" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="AppClosingQuestion.Text" xml:space="preserve">
    <value>Do you want to close the application?</value>
  </data>
  <data name="AppClosingYes.Text" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="Arguments.Text" xml:space="preserve">
    <value>Arguments</value>
  </data>
  <data name="BattlenetInstalledGamesMessage1.Text" xml:space="preserve">
    <value>Remember</value>
  </data>
  <data name="BattlenetInstalledGamesMessage2.Text" xml:space="preserve">
    <value>To run the game you select from Widgets, you must have it installed in the Battle.net app</value>
  </data>
  <data name="Bottom.Text" xml:space="preserve">
    <value>Bottom</value>
  </data>
  <data name="Center.Text" xml:space="preserve">
    <value>Center</value>
  </data>
  <data name="ConnectAddGame.Text" xml:space="preserve">
    <value>Add Shortcuts</value>
  </data>
  <data name="Contact.Text" xml:space="preserve">
    <value>Contact</value>
  </data>
  <data name="Customization.Text" xml:space="preserve">
    <value>Customization</value>
  </data>
  <data name="Data.Text" xml:space="preserve">
    <value>Data</value>
  </data>
  <data name="Executable.Text" xml:space="preserve">
    <value>Executable</value>
  </data>
  <data name="Fill.Text" xml:space="preserve">
    <value>Fill</value>
  </data>
  <data name="GameLoaded" xml:space="preserve">
    <value>game loaded</value>
  </data>
  <data name="GamesLoaded" xml:space="preserve">
    <value>games loaded</value>
  </data>
  <data name="ImageBig.Text" xml:space="preserve">
    <value>Big Image</value>
  </data>
  <data name="ImageMedium.Text" xml:space="preserve">
    <value>Medium Image</value>
  </data>
  <data name="ImageSmall.Text" xml:space="preserve">
    <value>Small Image</value>
  </data>
  <data name="ImageWide.Text" xml:space="preserve">
    <value>Wide Image</value>
  </data>
  <data name="Left.Text" xml:space="preserve">
    <value>Left</value>
  </data>
  <data name="MenuContact" xml:space="preserve">
    <value>Contact</value>
  </data>
  <data name="MenuExit" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="MenuGithub" xml:space="preserve">
    <value>Source Code</value>
  </data>
  <data name="MenuPatchNotes" xml:space="preserve">
    <value>Last Patch Notes</value>
  </data>
  <data name="MenuRate" xml:space="preserve">
    <value>Rate the App</value>
  </data>
  <data name="NoGamesBBDDMessage1.Text" xml:space="preserve">
    <value>There are games that you have installed and have not been detected by the app.</value>
  </data>
  <data name="NoGamesBBDDMessage2.Text" xml:space="preserve">
    <value>If you want to help with the app, you can contact with the developer saying what games and ids are missing.</value>
  </data>
  <data name="NoGamesDetected.Text" xml:space="preserve">
    <value>No Games Detected</value>
  </data>
  <data name="None.Text" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="Open.Text" xml:space="preserve">
    <value>Open</value>
  </data>
  <data name="Options" xml:space="preserve">
    <value>Options</value>
  </data>
  <data name="OptionsApp.Text" xml:space="preserve">
    <value>Application</value>
  </data>
  <data name="OptionsAppCleanButton.Text" xml:space="preserve">
    <value>Clean Data</value>
  </data>
  <data name="OptionsAppCleanInfo.Text" xml:space="preserve">
    <value>Clean Data</value>
  </data>
  <data name="OptionsAppCleanInfo2.Text" xml:space="preserve">
    <value>All the data and files generated by the application will be deleted, when finished the application will be restarted as if it were a clean installation</value>
  </data>
  <data name="OptionsAppWindow1.Text" xml:space="preserve">
    <value>Default</value>
  </data>
  <data name="OptionsAppWindow2.Text" xml:space="preserve">
    <value>Full Screen</value>
  </data>
  <data name="OptionsAppWindow3.Text" xml:space="preserve">
    <value>Overlapped</value>
  </data>
  <data name="OptionsAppWindowInfo.Text" xml:space="preserve">
    <value>Mode in which the application will be displayed in Windows</value>
  </data>
  <data name="OptionsLanguageInfo.Text" xml:space="preserve">
    <value>Application language</value>
  </data>
  <data name="OptionsLanguageInfo2.Text" xml:space="preserve">
    <value>A restart is necessary in the application to make the change</value>
  </data>
  <data name="OrientationHorizontal.Text" xml:space="preserve">
    <value>Horizontal Orientation</value>
  </data>
  <data name="OrientationVertical.Text" xml:space="preserve">
    <value>Vertical Orientation</value>
  </data>
  <data name="PresentationMessage.Text" xml:space="preserve">
    <value>Select the platform where you have the game to add on Steam:</value>
  </data>
  <data name="Right.Text" xml:space="preserve">
    <value>Right</value>
  </data>
  <data name="SelectFolderInstalledGames.Text" xml:space="preserve">
    <value>Select the folder where you have the games installed:</value>
  </data>
  <data name="ShortcutMessage" xml:space="preserve">
    <value>The shortcut has been added on Steam</value>
  </data>
  <data name="ShortcutsMessage" xml:space="preserve">
    <value>Shortcuts have been added on Steam</value>
  </data>
  <data name="SourceUrl.Text" xml:space="preserve">
    <value>Image Url:</value>
  </data>
  <data name="Stretch.Text" xml:space="preserve">
    <value>Stretch</value>
  </data>
  <data name="Stretch2.Text" xml:space="preserve">
    <value>Stretch</value>
  </data>
  <data name="Title.Text" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="Top.Text" xml:space="preserve">
    <value>Top</value>
  </data>
  <data name="Uniform.Text" xml:space="preserve">
    <value>Uniform</value>
  </data>
  <data name="UniformFill.Text" xml:space="preserve">
    <value>Uniform and Fill</value>
  </data>
</root>